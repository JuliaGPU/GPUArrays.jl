name: CI

on:
  push:
    branches:
    - master
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version: ['1.10', 'pre', 'nightly']
        os: [ubuntu-latest, macOS-latest, windows-latest]
        arch: [x64]
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - name: Develop subpackages
        run: |
          julia --project -e "
            using Pkg
            Pkg.develop([PackageSpec(; name=basename(path), path) for path in ARGS])
          " lib/GPUArraysCore lib/JLArrays
      - uses: julia-actions/julia-runtest@v1
        continue-on-error: ${{ matrix.version == 'nightly' }}
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src,lib
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          file: lcov.info
  opencl:
    name: OpenCL.jl
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.10'
          arch: x64
      - uses: julia-actions/cache@v2
      - name: Run tests
        run: |
          julia -e 'using Pkg

                    gpuarrays = pwd()
                    gpuarrayscore = joinpath(gpuarrays, "lib", "GPUArraysCore")
                    devdir = mktempdir()
                    package = joinpath(devdir, "OpenCL")

                    println("--- :julia: Installing TestEnv")
                    Pkg.activate(; temp=true)
                    Pkg.add(["TestEnv", "Git"])
                    using TestEnv, Git

                    println("--- :julia: Installing OpenCL.jl")
                    withenv("JULIA_PKG_PRECOMPILE_AUTO" => 0,
                            "JULIA_PKG_DEVDIR" => devdir) do
                      Pkg.develop("OpenCL")
                      run(setenv(`$(git()) checkout tb/gpuarrays_kernelabstractions`; dir=package))
                      Pkg.activate(package)

                      try
                        Pkg.develop([PackageSpec(path=gpuarrays), PackageSpec(path=gpuarrayscore)])
                        TestEnv.activate()
                      catch err
                        @error "Could not install OpenCL.jl" exception=(err,catch_backtrace())
                        exit(3)
                      finally
                        Pkg.activate(package)
                      end
                    end

                    println("+++ :julia: Running tests")
                    Pkg.test(; coverage=true)'
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src,lib
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.10'
      - name: Develop packages
        run: |
          julia -e "
            using Pkg
            Pkg.develop([PackageSpec(; name=basename(splitext(path)[1]), path) for path in ARGS])
          " ../GPUArrays.jl lib/GPUArraysCore
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=docs/ docs/make.jl
